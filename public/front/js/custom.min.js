function preLoader() {
  const tl = gsap.timeline({
    duration: 0.1,
  });
  tl.to(".preLoader.black > img", {
      y: 50,
      autoAlpha: 0,
    })
    .to(".preLoader.black", {
      yPercent: -100,
    })
    .to(".preLoader.white", {
      yPercent: -100,
    })
    .to(".preLoader", {
      css: {
        display: "none",
      },
    })
    .from(".mouse", {
      y: -50,
      autoAlpha: 0,
    })
    .from(
      ".navbar-brand > img", {
        x: -50,
        autoAlpha: 0,
      },
      "-=1"
    )
    .from(
      ".navbar-nav > li, .form-inline a", {
        autoAlpha: 0,
        x: 100,
        stagger: 0.05,
      },
      "-=1"
    )
    .from(
      ".slideOne", {
        autoAlpha: 0,
        yPercent: 100,
        stagger: 0.05,
      },
      "-=1"
    );
}

function allSliders() {
  // MAIN HOME BANNER

  const swiperOptions = {
    loop: true,
    speed: 1000,
    parallax: true,
    autoplay: false,
    grabCursor: false,
    pagination: {
      element: ".swiper-pagination",
      clickable: true,
    },
    navigation: {
      nextEl: ".swiper-button-next",
      prevEl: ".swiper-button-prev",
    },
  };

  const homeSlider = new Swiper(".homeSlider", swiperOptions);

  const bgImages = document.querySelectorAll(".bg-image");
  bgImages.forEach((bgImage) => {
    const dataBackground = bgImage.getAttribute("data-background");
    if (dataBackground) {
      bgImage.style.backgroundImage = `url(${dataBackground})`;
    }
  });

  // Other Sliders
  var customerSlider = new Swiper(".customerSlider", {
    loop: false,
    slidesPerView: 1,
    spaceBetween: 20,
    // If we need pagination

    breakpoints: {
      1024: {
        slidesPerView: 2,
        spaceBetween: 35,
      },
      768: {
        slidesPerView: 1,
        spaceBetween: 20,
      },
      640: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
      576: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
      375: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
    },
    pagination: {
      el: ".swiper-pagination",
      clickable: true,
    },
    // And if we need scrollbar
    scrollbar: {
      el: ".swiper-scrollbar",
    },
  });

  var discountSlider = new Swiper(".discountSlider", {
    loop: true,
    slidesPerView: 1,
    spaceBetween: 20,
    // If we need pagination

    breakpoints: {
      1024: {
        slidesPerView: 3,
        spaceBetween: 35,
      },
      768: {
        slidesPerView: 3,
        spaceBetween: 20,
      },
      640: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
      576: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
      375: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
    },
    // And if we need scrollbar
    scrollbar: {
      el: ".swiper-scrollbar",
    },

    pagination: {
      el: ".discountSlider-pagination",
      clickable: true,
    },
  });
  let productSliders = new Swiper(".productSliders-for", {
    loop: true,
    slidesPerView: 1,
    spaceBetween: 10,
    breakpoints: {
      1024: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
      768: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
      640: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
      576: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
      375: {
        slidesPerView: 1,
        spaceBetween: 10,
      },
    },
  });
}

function experience() {
  const experience = document.querySelector(".experienceSec .row");
  const experienceBtn = document.querySelector(".experienceSec .themeBtn");
  localStorage.getItem('showAllIssues') === 'true' && experience?.classList.add("active");
  experienceBtn?.addEventListener("click", () => {
    experience.classList.add("active");
    localStorage.setItem('showAllIssues', 'true');
  });
}

function mouseCursor() {
  if (
    document.querySelector(".cursor-inner") ||
    document.querySelector(".cursor-outer")
  ) {
    const cursorInner = document.querySelector(".cursor-inner");
    const cursorOuter = document.querySelector(".cursor-outer");
    let mouseX = 0;
    let mouseY = 0;
    let isHovering = false;

    window.addEventListener("mousemove", function (event) {
      if (!isHovering) {
        gsap.to(cursorOuter, {
          x: event.clientX,
          y: event.clientY,
        });
      }
      gsap.to(cursorInner, {
        x: event.clientX,
        y: event.clientY,
      });
      mouseY = event.clientY;
      mouseX = event.clientX;
    });

    const elementsToTrack = document.querySelectorAll(
      "a, img, .cursor-pointer"
    );
    elementsToTrack.forEach((element) => {
      element.addEventListener("mouseenter", function () {
        cursorInner.classList.add("cursor-hover");
        cursorOuter.classList.add("cursor-hover");
        isHovering = true;
      });

      element.addEventListener("mouseleave", function () {
        if (
          !(
            element.tagName === "A" ||
            element.tagName === "IMG" ||
            element.closest(".cursor-pointer")
          )
        ) {
          cursorInner.classList.remove("cursor-hover");
          cursorOuter.classList.remove("cursor-hover");
        }
        isHovering = false;
      });
    });

    gsap.set(cursorInner, {
      visibility: "visible",
    });
    gsap.set(cursorOuter, {
      visibility: "visible",
    });
  }
}

function replaceHash() {
  document.querySelectorAll("a").forEach((a) => {
    let href = a.getAttribute("href");
    a.href = href ?
      href.startsWith("#") && href.endsWith("#") ?
      href.replace("#", "javascript:void(0)") :
      href :
      "javascript:void(0)";
  });
}


function quantity() {
  $(document).ready(function () {
    $('.minus').click(function () {
      var $input = $(this).parent().find('input');
      var count = parseInt($input.val()) - 1;
      count = count < 1 ? 1 : count;
      $input.val(count);
      $input.change();
      return false;
    });
    $('.plus').click(function () {
      var $input = $(this).parent().find('input');
      $input.val(parseInt($input.val()) + 1);
      $input.change();
      return false;
    });
  });

}

function lenissetup() {
  const lenis = new Lenis();

  function raf(time) {
    lenis.raf(time);
    requestAnimationFrame(raf);
  }
  requestAnimationFrame(raf);
}
$(function () {
  allSliders();
  experience();
  mouseCursor();
  replaceHash();
  quantity();
  lenissetup();
  AOS.init({
    duration: 1200,
    disable: "mobile",
  });
})
$(window).on('load', function () {
  if ($(".preLoader")) {
    preLoader();
  } else {}
})